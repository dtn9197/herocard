{
  "schema_version": "1.0.0",
  "classes": [
    {
      "description": "`simple-picker`\na simple picker for options, icons, etc.\n\n### Styling\n\n`<simple-picker>` provides the following custom properties and mixins\nfor styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--simple-picker-display` | default display for simple-picker | inline-flex\n`--simple-picker-font-family` | Main font-family. | inherit\n`--simple-picker-font-size` | Main font-size. | inherit\n`--simple-picker-color` | Main text color. | black\n`--simple-picker-color-active` | Color of sample text when button is focused within or hovered. | --simple-picker-color\n`--simple-picker-color-disabled` | Disabled text color. | #888\n`--simple-picker-background-color` | Background color for button. | #f0f0f0\n`--simple-picker-background-color-disabled` | Background color for button when picker is disabled. | #e8e8e8\n`--simple-picker-border-radius` | Main border-radius. | 2px\n`--simple-picker-border-width` | Default border width. | 1px\n`--simple-picker-border-style` | Default border style. | solid\n`--simple-picker-border-color` | Default border color. | --simple-picker-color-disabled\n`--simple-picker-focus-border-width` | Border width when focused within or hovered. | --simple-picker-border-width\n`--simple-picker-focus-border-style` | Border style when focused within or hovered. | --simple-picker-border-style\n`--simple-picker-focus-border-color` | Border color when focused within or hovered. | --simple-picker-border-color\n`--simple-picker-listbox-border-width` | Border width of listbox. | --simple-picker-border-width\n`--simple-picker-listbox-border-style` | Border style of listbox. | --simple-picker-border-style\n`--simple-picker-listbox-border-color` | Border color of listbox. | --simple-picker-border-color\n`--simple-picker-label-color` | Label text color. | --simple-picker-color\n`--simple-picker-float-label-color` | Floating label text color. | --simple-picker-color-disabled\n`--simple-picker-float-label-active-color` | Floating label text color when picker is focused or hovered. | --simple-picker-color-disabled\n`--simple-picker-icon-transform` | Rotation of arrow icon by default. | rotate(0deg)\n`--simple-picker-expanded-icon-transform` | Rotation of arrow icon when picker is expanded. | rotate(0deg)\n`--simple-picker-sample-color` | Sample option text color. | --simple-picker-color\n`--simple-picker-sample-padding` | Sample option padding. | 2px\n`--simple-picker-sample-background-color` | Sample option background-color. | transparent\n`--simple-picker-option-size` | Height of option. | 24px\n`--simple-picker-option-selected-background-color` | Outline for currently sselected option. | --simple-picker-options-background-color\n`--simple-picker-option-active-background-color` | Outline for currently active option. | #aaddff\n`--simple-picker-option-padding` | padding within each simple picker option | 2px 10px\n`--simple-picker-option-label-padding` | adding within each simple picker option's label | --simple-picker-option-padding\n`--simple-picker-options-max-height` | Maximum amount of space listbox can use before scrolling. Use `unset` for now vertical scroll. | 250px\n`--simple-picker-options-border-width` | Border width of listbox. | --simple-picker-border-width\n`--simple-picker-options-border-style` | Border style of listbox. | --simple-picker-border-style\n`--simple-picker-options-border-color` | Border color of listbox. | --simple-picker-border-color\n`--simple-picker-options-background-color` | Background color for listbox. | #fff\n`--simple-picker-height` | Calculation based on option size, padding, and border. DO NOT EDIT. | --simple-picker-option-size - --simple-picker-sample-padding * 2 - --simple-picker-border-width * 2",
      "summary": "",
      "path": "simple-picker.js",
      "properties": [],
      "methods": [
        {
          "name": "render",
          "description": "render function",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 289,
              "column": 2
            },
            "end": {
              "line": 344,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "updated",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 559,
              "column": 2
            },
            "end": {
              "line": 573,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProperties"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getOption",
          "description": "returns value of selected option.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 582,
              "column": 2
            },
            "end": {
              "line": 588,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options",
              "type": "array",
              "description": "array of options"
            },
            {
              "name": "optionId",
              "type": "string",
              "description": "selected option's id"
            }
          ],
          "return": {
            "type": "object",
            "desc": "selected option"
          }
        },
        {
          "name": "_goToOption",
          "description": "sets a new active descendant and sets focus on it",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 597,
              "column": 2
            },
            "end": {
              "line": 608,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rownum",
              "type": "number",
              "description": "row number to be tested"
            },
            {
              "name": "colnum",
              "type": "number",
              "description": "column number to be tested"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleListboxClick",
          "description": "handles listbox click event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 615,
              "column": 2
            },
            "end": {
              "line": 622,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "event",
              "description": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleListboxMousedown",
          "description": "handles listbox mousedown event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 629,
              "column": 2
            },
            "end": {
              "line": 635,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "event",
              "description": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleListboxKeydown",
          "description": "handles listbox keyboard events",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 642,
              "column": 2
            },
            "end": {
              "line": 683,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "event",
              "description": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleOptionFocus",
          "description": "handles option focus event and sets active descendant",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 690,
              "column": 2
            },
            "end": {
              "line": 692,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "event",
              "description": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setActiveOption",
          "description": "sets  active descendant to a given option's id",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 699,
              "column": 2
            },
            "end": {
              "line": 706,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id",
              "type": "string",
              "description": "option id"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_valueChanged",
          "description": "handles change in value",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 715,
              "column": 2
            },
            "end": {
              "line": 726,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "object",
              "description": "new value for picker"
            },
            {
              "name": "oldValue",
              "type": "object",
              "description": "old value for picker"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_optionsChanged",
          "description": "handles change in options",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 734,
              "column": 2
            },
            "end": {
              "line": 736,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "object",
              "description": "new options for picker"
            },
            {
              "name": "oldValue",
              "type": "object",
              "description": "old options for picker"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setSelectedOption",
          "description": "sets selected option to a given option's id",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 742,
              "column": 2
            },
            "end": {
              "line": 777,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newVal"
            },
            {
              "name": "oldVal"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_toggleListbox",
          "description": "toggles listbox",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 785,
              "column": 2
            },
            "end": {
              "line": 804,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "open",
              "type": "boolean",
              "defaultValue": "!this.expanded",
              "description": "whether to open"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setOptions",
          "description": "sets options for picker",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 811,
              "column": 2
            },
            "end": {
              "line": 814,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options",
              "type": "array",
              "description": "nested array of options"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "life cycle, element is removed from DOM",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 818,
              "column": 2
            },
            "end": {
              "line": 823,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "./demo/index.html",
          "description": ""
        },
        {
          "url": "./demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 57,
          "column": 0
        },
        "end": {
          "line": 824,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "SimplePicker"
    },
    {
      "description": "`simple-picker-option`\na simple picker for options, icons, etc.\n\n### Styling\n\n`<a11y-gif-player>` provides the following custom properties\nfor styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--simple-picker-color` | color of simple picker text | unset\n`--simple-picker-option-padding` | padding within each simple picker option | 2px 10px\n`--simple-picker-option-label-padding` | adding within each simple picker option's label | --simple-picker-option-padding\n`--simple-picker-option-size` | size of each simple picker option | 24px",
      "summary": "",
      "path": "lib/simple-picker-option.js",
      "properties": [],
      "methods": [
        {
          "name": "render",
          "description": "render function",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_handleFocus",
          "description": "On keyboard focus, fires an event to the picker so that active descendant can be set.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 2
            },
            "end": {
              "line": 211,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleHover",
          "description": "On mouse hover, fires an event to the picker so that active descendant can be set.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 217,
              "column": 2
            },
            "end": {
              "line": 219,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getColor",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 2
            },
            "end": {
              "line": 223,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 26,
          "column": 0
        },
        "end": {
          "line": 224,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "SimplePickerOption"
    }
  ]
}
